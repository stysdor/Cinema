@using Cinema.gui.Models
@using Cinema.Infrastructure.Dto
@model CustomerReservationModel
@{
    ViewBag.Title = "AddReservation";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int row = 0;
}

    <div class="panel panel-primary">
        <div class="panel-heading">
            Zarezerwuj miejsce
        </div>
        <div class="panel-body">
            @using (var form = Html.BeginForm("AddReservation", "Reservation", FormMethod.Post))
            {
                @Html.HiddenFor(x => x.Reservation.ShowingId)

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Wybierz miejsce: </label>
                    <div class="col-sm-10">
                        <div class="seats-row">
                            @foreach (RowSeatDto seat in Model.Seats)
                            {
                                
                                if (seat.RowNumber != row)
                                {
                                    row = seat.RowNumber;
                                    @Html.Raw("</div>")
                                    @Html.Raw("<div class='seats-row'>")
                                    <div class='row-number'>Rząd @seat.RowNumber:</div>

                                }
                                <label class="radio-label">

                                    @Html.RadioButtonFor(x => x.Reservation.RowSeatId, @seat.Id)
                                    <span class="seat @seat.SeatStatus" id="@seat.Id">@seat.SeatNumber</span>
                                </label>
                            }
                        </div>
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(x => x.Customer.CustomerName, new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(x => x.Customer.CustomerName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Customer.CustomerName, null, new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(x => x.Customer.CustomerSurname, new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(x => x.Customer.CustomerSurname, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Customer.CustomerSurname, null, new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(x => x.Customer.Phone, new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(x => x.Customer.Phone, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Customer.Phone, null, new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(x => x.Customer.Email, new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        @Html.TextBoxFor(x => x.Customer.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Customer.Email, null, new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <button class="btn btn-primary pull-right" type="submit">Zarezerwuj</button>
                    </div>
                </div>
            }


        </div>
    </div>


